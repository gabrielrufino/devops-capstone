version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0

commands:
  destroy-environment:
    description: Destroy cloudformation stacks given a workflow ID.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: aws cloudformation delete-stack --stack-name backend-${CIRCLE_WORKFLOW_ID}

jobs:
  id:
    docker:
      - image: alpine
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
  lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run lint
  tests:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm ci
      - run: npm test
  scan:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm audit --audit-level=critical
  build-dockerfile:
    machine: true
    steps:
      - checkout
      - run: docker build --tag=devops-capstone .
      - run: docker image ls
  create-cluster:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: capstone-cluster
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''

workflows:
  default:
    jobs:
      - id
      - lint:
          requires:
            - id
      - tests:
          requires:
            - id
      - scan:
          requires:
            - id
      - build-dockerfile:
          requires:
            - lint
            - tests
            - scan
      - create-cluster:
          filters:
            branches:
              only: main
          requires:
            - build-dockerfile
