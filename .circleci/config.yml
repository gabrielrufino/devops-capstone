version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  id:
    docker:
      - image: alpine
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
  lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run lint
  tests:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm ci
      - run: npm test
  scan:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm audit --audit-level=critical
  build-dockerfile:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: docker build --tag=devops-capstone .
      - run: docker image ls
      - run: docker tag devops-capstone gabrielrufino/devops-capstone:latest
      - run: docker push gabrielrufino/devops-capstone:latest
  create-cluster:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: capstone
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''
  create-service:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: .circleci/infra/service.yml
          resource-name: service/bluegreenlb
  create-deployment:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: .circleci/infra/deployment.yml
          resource-name: deployment/blue
  smoke-test:
    docker:
      - image: ubuntu
    steps:
      - checkout
      - run: |
          apt udate
          apt install curl -y
          LB_URL=$(aws elb describe-load-balancers --load-balancer-name bluegreenlb --query "LoadBalancerDescriptions[0].DNSName" --output text)
          curl LB_URL
workflows:
  default:
    jobs:
      - id
      - lint:
          requires:
            - id
      - tests:
          requires:
            - id
      - scan:
          requires:
            - id
      - build-dockerfile:
          requires:
            - lint
            - tests
            - scan
      - create-cluster:
          filters:
            branches:
              only: main
          requires:
            - build-dockerfile
      - create-service:
          requires:
            - create-cluster
      - create-deployment:
          requires:
            - create-service
      - smoke-test:
          requires:
            - create-deployment